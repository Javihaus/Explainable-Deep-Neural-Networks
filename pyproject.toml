[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "explainable-neural-topology"
version = "1.0.0"
description = "Advanced framework for understanding neural network topology through TDA"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Javier Marin", email = "javier@jmarin.info"}
]
keywords = [
    "neural networks", 
    "topological data analysis", 
    "persistent homology", 
    "explainable AI",
    "deep learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "scipy>=1.7.0",
    "umap-learn>=0.5.0",
]

[project.optional-dependencies]
tda = [
    "giotto-tda>=0.6.0",
]
tensorflow = [
    "tensorflow>=2.8.0",
]
pytorch = [
    "torch>=1.11.0",
    "torchvision>=0.12.0",
]
visualization = [
    "holoviews>=1.14.0",
    "bokeh>=2.4.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
all = [
    "explainable-neural-topology[tda,tensorflow,pytorch,visualization,dev,docs]"
]

[project.urls]
Homepage = "https://github.com/Javihaus/Explainable-Deep-Neural-Networks"
Repository = "https://github.com/Javihaus/Explainable-Deep-Neural-Networks"
Documentation = "https://explainable-neural-topology.readthedocs.io"
"Bug Tracker" = "https://github.com/Javihaus/Explainable-Deep-Neural-Networks/issues"

[project.scripts]
neural-topology = "neural_topology.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
neural_topology = ["py.typed", "config/*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["neural_topology"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "giotto_tda.*",
    "umap.*",
    "plotly.*",
    "holoviews.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "topology: marks tests related to topological analysis",
    "neural: marks tests related to neural network integration", 
    "visualization: marks tests related to plotting",
]

[tool.coverage.run]
source = ["src/neural_topology"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]